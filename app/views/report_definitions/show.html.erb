<% evaluations =  @report_definition.evaluations %>


<style>
/*.ui-progressbar{ background-image: url(images/pbar-ani.gif); }*/
td:hover{
  background-color:#ddd;
}
th{
  text-align:left;
}
th .formula{
  font-size:9pt;
  font-weight:normal;
}
.error {
  background-color:#ED8593;
}
.stale{
  background-color:#F2E194;
}
.template{
  display:none;
}
.hide{ display:none; }
.popup,tr > td.calculated:nth-child(2) .popup{
  margin-left:60px;
  margin-top:-5px;
  padding:10px;
  display:none;
  background-color:#fff;
  position:absolute;
  border:1px solid #ddd;
  -moz-border-radius: 15px;
  border-radius: 15px;
  width:400px;
}
tr > td:last-child .popup{
  margin-left:-250px;
}
fieldset{
  -moz-border-radius: 15px;
  border-radius: 15px;
  border:1px solid #ddd;
}


</style>

<script>
  
  function random(min,max){
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }
  function increment(bar,max,speed){
    var interval = null;
    var animate = function(){
      value = bar.progressbar("value") + random(0,5);
      if(value > 100 ){
        bar.progressbar({value:100});
      }else{
        bar.progressbar({value:value});
      }
      if(value >= max){
        clearInterval(interval);
      }
    }
    interval = setInterval(animate,speed);
  } 
function Cell(jqSelected, project_id,evaluation_id,formula_id){
  this.jqSelected = jqSelected;
  this.formula_id = formula_id;
  this.project_id = project_id;

}

Cell.prototype.calculate = function(){
  var that = this;
  this.template = jQuery('#cell_template').clone().removeAttr('id').removeClass('template');
  var url = '/formulas/' + that.formula_id + '?project=' + that.project_id + '&datetime=' + escape('<%= @date.iso8601 %>');

  jQuery.ajax({
    url:url,
    beforeSend:function(){that.beginToSpin();},
    success:function(data){ that.success(data);},
    error:function(xhr){ that.error(xhr.message);},
    dataType:'json' 
  });
}

Cell.prototype.beginToSpin = function(){
  var value = 0;
  var progressbar = this.jqSelected.progressbar({value:value}); 
  increment(progressbar,random(40,60),random(100,300));
}
Cell.prototype.stopSpinning = function(callback){
    var that = this;
    increment(this.jqSelected,100,50);
    this.jqSelected.progressbar({complete:function(){
      that.jqSelected.progressbar('destroy');
      that.jqSelected.text('');
      that.jqSelected.removeClass('ui-progressbar ui-widget-content');
      callback.call();
    }});
}

Cell.prototype.success = function(data, statua){
    var that = this;
    that.stopSpinning(function(){
      that.display(data); 
    });
}


Cell.prototype.display = function(data){
  function snapshotFromTemplate(snapshot){
    var template = jQuery('#snapshot_template').clone().removeAttr('id').removeClass('template');
    if(typeof(snapshot.metric_snapshot) !== 'undefined'){
      var snap = snapshot.metric_snapshot;
      if(snap.value == null){
        template.addClass('error');
      }
      else if(snapshot.is_stale){
        template.addClass('stale');
      }
      template.find('.is_stale').text(snapshot.is_stale);  
      template.find('.created_at').text(new Date(snap.created_at).toLocaleString());
      template.find('.updated_at').text(new Date(snap.updated_at).toLocaleString());
      template.find('.value').text(snap.value);
      template.find('.datetime').text(new Date(snap.datetime).toLocaleString());
      template.find('.metric').text(snapshot.metric_name);
      template.find('.id').text(snap.id);
    }else{
      template.find('.value').text('null');
      template.addClass('error');
    }
    return template;
  }
  var that = this;
  var template = this.template;

  template.find('.evaluated_string').text(data.calculated_string);

  if(data.isSuccess){
    template.find('.value').text(data.value);
    if(data.stale_snapshots.length > 0){ 
      template.addClass('stale'); 
    }
  }else if(!data.isSuccess){ 
    template.prepend(data.message);
    template.addClass('error'); 
  }


  jQuery(data.snapshots).each(function(){
    var snapshotTemplate = snapshotFromTemplate(this);  
    template.find('.snapshots').append(snapshotTemplate);
  });

  that.jqSelected.append(template);
}

Cell.prototype.error = function(message){
    var that = this;
    var data = {
      isSuccess:false,
      message:message,
      snapshots:[],
      stale_snapshots:[]
    };
    that.stopSpinning(function(){
      that.display(data); 
    });
}

jQuery(document).ready(function(){
      jQuery('td').live('mouseover mouseout',function(e){
        if(jQuery(this).has('.popup')){
          if(e.type =="mouseover"){
            jQuery(this).find('.popup').show();
          }else{
            jQuery(this).find('.popup').hide();
          }
        }
      });
      var cell;
      <% @report_definition.projects.each do |project| %>
        <% evaluations.each do |evaluation| %>
          cell = new Cell(jQuery('#<%= cell_id(project,evaluation) %>'), '<%= project.id %>', '<%= evaluation.id %>', '<%= evaluation.formula.id %>');
          cell.calculate();
        <% end %>
      <% end %>
});



</script>

<p id="notice"><%= notice %></p>

<div id="cell_template" class="template"> 
  <div><span class="label hide">value:</span><span class="value"></span></div>
  <div class="popup">
    calculation:<div class="evaluated_string"></div>
    <fieldset class="snapshots"><legend>metrics used in calculation</legend></fieldset>
  </div>
</div>

  <fieldset id="snapshot_template" class="snapshot template"><legend>snapshot</legend>
  <div>metric:<span class="metric"></span></div>
  <div>value: <span class="value"></span></div>
  <div class="hide">stale?: <span class="is_stale"></span></div>
  <div>measured on:<span class="datetime"></span></div>
  <div class="hide">created at: <span class="created_at"></span></div>
  <div>last synchronized: <span class="updated_at"></span></div>
  <div class="hide">id:<span class="id"></span></div>
  </fieldset>

<p>
  <b>Name:</b>
  <%= @report_definition.name %>
  <% evaluations =  @report_definition.evaluations %>
  <table> 
  <thead>
    <tr>
      <th>Projects</th>
      <% evaluations.each do |evaluation| %>
        <th id="<%= identify(evaluation,evaluation.formula) %>">
          <%= evaluation.formula.name %>
          <div class="formula"><span class="label hide">Formula:</span><%= evaluation.formula.to_s %></div>
        </th>
      <% end %>
    </tr>
  </thead>
  <tbody>
      <% @report_definition.projects.each do |project| %>
        <tr>
          <td id="<%= identify(project) %>" class="project"><%= project.name %></td>
          <% evaluations.each do |evaluation| %>
           <td id="<%= cell_id(project,evaluation) %>" class="calculated"> </td> 
          <% end %>
        </tr>
      <% end %>
  </tbody>
  
    
  
  </table>
</p>



<%= link_to 'Edit', edit_report_definition_path(@report_definition) %> |
<%= link_to 'Back', report_definitions_path %>
<img src="http://naivepagetracker.heroku.com/websites/6/visit.gif" /> 


