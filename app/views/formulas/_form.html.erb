
<script>
var metrics= [<%= Metric.all.map{|m| "{ label:'#{m.name}', value:'#{m.key}'}"}.join(',') %>]; 
function Formula(selected){
 this.lastCarreted = null;
 var that = this;
 var count = 0;
 function replaceValue(event,ui){
      event.preventDefault();
      var field = jQuery(this);
      var originalVal = field.val();
      
      var replaced = originalVal.substring(0, field.caret().start);
      replaced = replaced.replace(/(_|\w)+$/, ui.item.value);
      field.val(replaced + originalVal.substring(field.caret().start, originalVal.length));
      field.caret(replaced.length,replaced.length);
      that.lastCarreted = replaced.length;
      count++;
 }
 selected.autocomplete( { 
     source:metrics, 
     select: replaceValue,
     focus:function(e){e.preventDefault;}
 });
 selected.keyup(function(){
  var field = jQuery(this);
  if(that.lastCarreted != null){
    field.caret(this.lastCarreted,this.lastCarreted);
  }
    
  var searchTerm = field.val().substring(0, field.caret().start).match(/\w+$/);
  if(searchTerm != null){ field.autocomplete('search', searchTerm[0]); }
});
}

jQuery(document).ready(function(){
 var formula = new Formula(jQuery('#formula'));
});
</script>

<%= form_for(@formula) do |f| %>
  <% if @formula.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@formula.errors.count, "error") %> prohibited this formula from being saved:</h2>

      <ul>
      <% @formula.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :name %><br />
    <%= f.text_field :name %>
  </div>
  <div class="field">
    <%= f.label :formula %><br />
    <%= f.text_area :formula, {:value => @formula.to_s,:id=>'formula', :rows => "5"} %>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
